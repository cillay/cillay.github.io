{"version":3,"sources":["async-worker.es6"],"names":[],"mappings":"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","file":"async-worker.js","sourcesContent":["class AsyncWorker {\n    constructor(asyncFunction, imports) {\n        if (asyncFunction instanceof Function) {\n            var getFunctionBody = (fn) => fn.toString().substring(fn.toString().indexOf(\"{\") + 1, fn.toString().lastIndexOf(\"}\")),\n                getFunctionArgs = (fn) => fn.toString().substring(fn.toString().indexOf(\"(\") + 1, fn.toString().indexOf(\")\")),\n                $$syncFunctionBody = getFunctionBody(asyncFunction),\n                $$syncFunctionArgs = getFunctionArgs(asyncFunction).replace(/\\s/g, \"\");\n\n            if ($$syncFunctionArgs.length) {\n                $$syncFunctionArgs = $$syncFunctionArgs.replace(/(\\w+)/g, '\"$1\"');\n                $$syncFunctionArgs += \", \";\n            }\n\n            var workerFunction = () => {\n                var syncFunction = new Function($$syncFunctionArgs, $$syncFunctionBody);\n\n                self.onmessage = function (event) {\n                    var uid = event.data[0],\n                        args = event.data[1],\n                        result = syncFunction.apply(syncFunction, args);\n                    self.postMessage([uid, result]);\n                }\n            };\n\n            var onWorkerMessage = function (event) {\n                var uid = event.data[0],\n                    result = event.data[1],\n                    handler = this.handlers[uid];\n                if (handler) {\n                    handler(result);\n                    delete (this.handlers[uid]);\n                }\n            };\n\n            var strSyncFunction = '\"' + $$syncFunctionBody.replace(/\"/g, '\\\\\"').replace(/[\\r\\n]/g, '; ') + '\"';\n            var strWorkerFunction = getFunctionBody(workerFunction)\n                .replace(\"$$syncFunctionBody\", strSyncFunction)\n                .replace(\"$$syncFunctionArgs,\", $$syncFunctionArgs);\n\n            if (imports && imports instanceof Array && imports.length) {\n            \tstrWorkerFunction = 'importScripts(\"' + imports.join('\", \"') +'\");\\n' + strWorkerFunction;\n            }\n            strWorkerFunction = 'var window = self;\\nwindow.document=new Object();\\n' + strWorkerFunction;\n\n            var blob = new Blob([ strWorkerFunction ], { type: \"text/javascript\" });\n            this.worker = new Worker(window.URL.createObjectURL(blob));\n            this.worker.onmessage = onWorkerMessage.bind(this.worker);\n            this.worker.handlers = {};\n        }\n        else {\n            throw new Error(\"Argument must be a function\");\n        }\n    }\n\n    _generateUniqueId() {\n        var d = Date.now();\n        var uuid = \"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx\".replace(/[xy]/g, function (c) {\n            var r = (d + Math.random() * 16) % 16 | 0;\n            d = Math.floor(d / 16);\n            return (c == 'x' ? r : (r & 0x3 | 0x8)).toString(16);\n        });\n        return uuid;\n    };\n\n    invoke() {\n        var uid = this._generateUniqueId();\n        var promise = new Promise((resolve, reject) => {\n            this.worker.handlers[uid] = function (result) {\n                resolve(result);\n            };\n            var args = Array.prototype.slice.call(arguments);\n            this.worker.postMessage([uid, args]);\n        });\n        return promise;\n    }\n}"]}